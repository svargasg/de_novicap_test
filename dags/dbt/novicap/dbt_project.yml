
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'novicap'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'novicap'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["data_tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "logs"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model
# files using the `{{ config(...) }}` macro.
vars:
  novicap:
    env: "{{ env_var('dbt_env', 'dev') }}"

models:
  novicap:
    +bind: false # Materialize all views as late-binding
    +materialized: table
    +grants:
      select: 'GROUP readonlyusers'
    # The next line can replace the previous 2 lines
    # post-hook: 'grant select on {{ this }} to group readonlyusers'
    revenue:
      +schema: revenue

on-run-end:
  - "{% for schema in schemas%}grant usage on schema {{ schema }} to group readonlyusers;{% endfor%}"
